<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="emp">

<!-- 페이징, 검색 관련 매퍼 -->

<!-- 사원숫자 -->
<select id="total" resultType="integer">
	SELECT count(*) FROM tbl_emp e <include refid="emp_where"/>
</select>

<!-- 검색 키워드에 따른 현재는 전체, 사번,이름 -->
<sql id="emp_where">
	<choose>
		<when test="search=='all'">
			WHERE emp_name LIKE '%' || #{keyword} || '%'
			or e.emp_no  LIKE '%' || #{keyword} || '%'
		</when>
		<when test="search=='emp_no'">
			WHERE ${search} =LIKE '%' || #{keyword} || '%'
		</when>
		<when test="search=='emp_name'">
			WHERE e.${search} like '%' || #{keyword} || '%'
		</when>
	</choose>
</sql>
<!-- 목록조회 번호 및 시작 과 끝 -->
<select id="plist" resultType="employee.EmployeeVO">
select * from(
        select row_number() over(ORDER BY e.emp_no desc) no, e.*,c.code_value rank_name,c2.code_value branch_name ,c3.code_value department_name
            from tbl_emp e left join tbl_org o
                    on e.emp_no = o.emp_no
                    left join tbl_code c
                    on o.rank_code = c.code_category||c.code_num
                    left join tbl_code c2
                    on o.branch_code  = c2.code_category||c2.code_num left join tbl_code c3
                    on o.dept_code  = c3.code_category||c3.code_num 
                    <include refid="emp_where"/>) e
WHERE no BETWEEN #{beginList} and #{endList}
order by no desc

</select>


<!-- 페이징 관련 매퍼 끝 -->


<!-- 임시로그인 을 위한 처리  -->
<select id="tempLogin" resultType="employee.EmployeeVO">
select row_number() over(ORDER BY e.emp_no) no, e.*,c.code_value rank_name,c2.code_value branch_name ,c3.code_value department_name
from tbl_emp e left join tbl_org o
on e.emp_no = o.emp_no
left join tbl_code c
on o.rank_code = c.code_category||c.code_num
left join tbl_code c2
on o.branch_code  = c2.code_category||c2.code_num left join tbl_code c3
on o.dept_code  = c3.code_category||c3.code_num 
where e.emp_no = #{id}
</select>





<!-- 전체사원조회 -->
<select id="list" resultType="employee.EmployeeVO">
select row_number() over(ORDER BY e.emp_no) no, e.*,c.code_value rank_name,c2.code_value branch_name ,c3.code_value department_name
from tbl_emp e left join tbl_org o
on e.emp_no = o.emp_no
left join tbl_code c
on o.rank_code = c.code_category||c.code_num
left join tbl_code c2
on o.branch_code  = c2.code_category||c2.code_num left join tbl_code c3
on o.dept_code  = c3.code_category||c3.code_num 
order by e.emp_no
</select>

<!-- 특정 사원 사번으로 조회 -->
<select id="info" resultType="employee.EmployeeVO">
select e.*,c.code_value rank_name,c2.code_value branch_name ,c3.code_value department_name
from tbl_emp e left join tbl_org o
on e.emp_no = o.emp_no
left join tbl_code c
on o.rank_code = c.code_category||c.code_num
left join tbl_code c2
on o.branch_code  = c2.code_category||c2.code_num left join tbl_code c3
on o.dept_code  = c3.code_category||c3.code_num 
WHERE e.emp_no=#{id}
</select>

<!-- 코드별 목록조회 -->
<select id="codeList" resultType="common.SimpleCode">

select code_category||code_num code, code_value
from tbl_code
where code_category=#{cod}
order by 2 asc
</select>

<!-- 사원정보 수정 -->
<update id="update">
UPDATE tbl_emp
SET emp_name = #{emp_name}, gender = #{gender },phone= #{ phone},email= #{ email},birth= to_char(#{birth},'yyyy-MM-dd'),address= #{address,jdbcType=VARCHAR}
,admin= #{admin}
<if test='profile_path != null'>
, profile_path=#{profile_path,jdbcType=VARCHAR}
</if>
WHERE emp_no= #{emp_no}
</update>

<!-- 사원부서 수정 -->
<update id="updateOrg">
UPDATE tbl_org
SET rank_code =#{rank_name}, branch_code=#{branch_name}, dept_code=#{department_name}
WHERE emp_no= #{emp_no}
</update>

<!-- 전체사원 수 조회 -->
<select id="countAll" resultType="Integer">
select count(*) from tbl_emp
</select>

<!-- 퇴사사원 조회 -->
<select id="countRetired" resultType="Integer">
select count(*) from(
        select row_number() over(ORDER BY e.emp_no desc) no, e.*,c.code_value rank_name,c2.code_value branch_name ,c3.code_value department_name
            from tbl_emp e left join tbl_org o
                    on e.emp_no = o.emp_no
                    left join tbl_code c
                    on o.rank_code = c.code_category||c.code_num
                    left join tbl_code c2
                    on o.branch_code  = c2.code_category||c2.code_num left join tbl_code c3
                    on o.dept_code  = c3.code_category||c3.code_num 
                    <include refid="emp_where"/>) e
WHERE no BETWEEN #{beginList} and #{endList} and e.admin= 'X0'

</select>
<select id="allCountRetired" resultType="Integer">
select count(*) from tbl_emp
WHERE admin= 'X0'

</select>
<!-- 퇴사 -->
<update id="fire" >
	UPDATE tbl_emp SET ADMIN='X0',end_Date = to_char(current_date,'yyyy-MM-dd') WHERE emp_no=${emp_no}
</update>

<update id="myinfo_update">
update tbl_emp set emp_pw = #{emp_pw}, phone = #{phone}, email= #{email} where emp_no = #{emp_no}
</update>

<!-- 검색기능 -->
<select id="keyword" resultType="employee.EmployeeVO">
select e.*,c.code_value rank_name,c2.code_value branch_name ,c3.code_value department_name
from tbl_emp e left join tbl_org o
on e.emp_no = o.emp_no
left join tbl_code c
on o.rank_code = c.code_category||c.code_num
left join tbl_code c2
on o.branch_code  = c2.code_category||c2.code_num left join tbl_code c3
on o.dept_code  = c3.code_category||c3.code_num
where e.emp_name like '%'||#{keyword}||'%' 
order by e.emp_no
</select>




<insert id="insert" >
	INSERT INTO tbl_emp ( emp_name, emp_pw, gender, phone, email, birth ,address,salary, profile_path)
	VALUES (#{emp_name},#{emp_pw},#{gender},#{phone},#{email},#{birth},#{address},#{salary},#{profile_path,jdbcType=VARCHAR})
</insert>

<select id="adminCode">
select admin from tbl_emp
where emp_no=#{no}
</select>

<select id="search_emp" resultType="employee.EmployeeVO">
select e.*,c.code_value rank_name,c2.code_value branch_name ,c3.code_value department_name
from tbl_emp e left join tbl_org o
on e.emp_no = o.emp_no
left join tbl_code c
on o.rank_code = c.code_category||c.code_num
left join tbl_code c2
on o.branch_code  = c2.code_category||c2.code_num left join tbl_code c3
on o.dept_code  = c3.code_category||c3.code_num
where emp_name=#{emp_name} and email=#{email}
</select>

<select id="emp_no" resultType="String">
select emp_no
from tbl_emp
where emp_name=#{emp_name} and email=#{email}
</select>

<!-- 사번으로 이름만 검색 -->
<select id="findNameByNo" resultType="String">
select emp_name
from tbl_emp
where emp_no=#{emp_no}
</select>


<!-- org 테이블 신규사원 코드 추가 -->
<insert id="codeInsert">
INSERT INTO tbl_org (emp_no,rank_code,branch_code,dept_code)
VALUES (#{emp_no},#{rank_code},#{branch_code},#{dept_code})
</insert>


<update id="orgUpdate">
UPDATE tbl_org
SET rank_code=#{rank_code}, branch_code = #{branch_code},dept_code= #{dept_code}
WHERE emp_no= #{emp_no}
</update>


</mapper>